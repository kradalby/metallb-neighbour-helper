---
{
  'kind': 'pipeline',
  'name': 'Kubernetes',
  'node_selector': { 'drone': true },
  'platform': { 'arch': 'amd64', 'os': 'linux' },
  'steps':
    [
      {
        'commands':
          [
            'npm install prettier',
            'npx prettier --check "**/*.{ts,js,md,yaml,yml,sass,css,scss}"',
          ],
        'image': 'node:lts-buster',
        'name': 'Prettier lint',
        'pull': 'always',
      },
      {
        'commands':
          [
            'curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin',
            'golangci-lint run -v --timeout 10m',
          ],
        'image': 'golang:1.16-buster',
        'name': 'Go lint',
        'pull': 'always',
      },
      {
        'commands': ['go test ./...'],
        'image': 'golang:1.16-buster',
        'name': 'Go test',
        'pull': 'always',
      },
      {
        'environment': { 'DOCKER_BUILDKIT': 1 },
        'image': 'plugins/docker',
        'name': 'Build container image',
        'pull': 'always',
        'settings': { 'dry_run': true, 'purge': true },
        'trigger': { 'event': ['pull_request'] },
        'when': { 'branch': { 'exclude': ['master'] } },
      },
      {
        'environment': { 'DOCKER_BUILDKIT': 1 },
        'image': 'plugins/docker',
        'name': 'Publish image kradalby/metallb-neighbour-helper',
        'pull': 'always',
        'settings':
          {
            'password': { 'from_secret': 'docker_password' },
            'purge': true,
            'repo': 'kradalby/metallb-neighbour-helper',
            'tags':
              [
                'latest',
                'latest-${DRONE_STAGE_OS}-${DRONE_STAGE_ARCH}',
                '${DRONE_COMMIT_SHA:0:8}',
              ],
            'username': { 'from_secret': 'docker_username' },
          },
        'when': { 'branch': ['master'], 'event': ['push'] },
      },
      {
        'image': 'appleboy/drone-discord',
        'name': 'Notify Discord',
        'pull': 'always',
        'settings':
          {
            'message': "{{#success build.status}}\n✅  Build #{{build.number}} of `{{repo.name}}` succeeded.\n\n📝  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\n🌐  {{ build.link }}\n\n✅  duration: {{duration build.started build.finished}}\n✅  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n✅  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{else}}\n@everyone\n❌  Build #{{build.number}} of `{{repo.name}}` failed.\n\n📝  Commit by {{commit.author}} on `{{commit.branch}}`:\n``` {{commit.message}} ```\n🌐  {{ build.link }}\n\n✅  duration: {{duration build.started build.finished}}\n✅  started: {{datetime build.started \"2006/01/02 15:04\" \"UTC\"}}\n✅  finished: {{datetime build.finished \"2006/01/02 15:04\" \"UTC\"}}\n\n{{/success}}\n",
            'webhook_id': { 'from_secret': 'discord_webhook_id' },
            'webhook_token': { 'from_secret': 'discord_webhook_token' },
          },
        'when': { 'status': ['success', 'failure'] },
      },
    ],
  'type': 'kubernetes',
}
